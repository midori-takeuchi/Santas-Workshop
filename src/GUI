package Tables;
import javax.swing.*;

import java.awt.*;
import java.awt.event.*;
import java.sql.SQLException;

import javax.swing.BoxLayout;

import Elves.Elves;


public class GUI extends JPanel {
    private boolean DEBUG = false;
 
    public GUI() {
    	super(new GridLayout(1,0));
    	
setLayout(new BoxLayout(this, BoxLayout.Y_AXIS));
   
        Button cbutton=new Button("Toggle Children");
    	Button ebutton=new Button("Toggle Elves"); 
        Button sbutton=new Button("Toggle Santa");
        
       
        String[] columnNames = {"Child ID",
                                "Name",
                                "Address",
                                "NaughtyNice"};
 
        Object[][] data = {
        {892305, "Jordan", "689 Poke Nay Gor Chow Street, Richmond, BC", "Nice"},
        {346353, "Katie", "310 Somewhere in UBC Street, Vancouver, BC", "Nice"},
        {392053, "Midori", "304 Somewhere along the highway Street, Burnaby, BC", "Nice"},
        {392053, "John", "430 CPSC Ugrad TA Street, Surrey, BC", "Nice"}};
        
        final JTable table = new JTable(data, columnNames);
        table.setPreferredScrollableViewportSize(new Dimension(500, 70));
        table.setFillsViewportHeight(true);
 
       
 
        if (DEBUG) {
            table.addMouseListener(new MouseAdapter() {
                public void mouseClicked(MouseEvent e) {
                    printDebugData(table);
                }
            });
        }
        
        //Create the scroll pane and add the table to it.
        JScrollPane scrollPane = new JScrollPane(table);
 
        //Add the scroll pane to this panel.
        add(scrollPane);
        
        add(cbutton);
        add(ebutton); 
        add(sbutton);

        
        ebutton.addActionListener(new ActionListener() { 
    	    public void actionPerformed(ActionEvent e) { 
    	    	System.out.println("c executed");
    	    }

    	});
    
        cbutton.addActionListener(new ActionListener() { 
    	    public void actionPerformed(ActionEvent e) { 
    	    	System.out.println("e executed");
    	    }

    	});
        
        sbutton.addActionListener(new ActionListener() { 
    	    public void actionPerformed(ActionEvent e) { 
    	    	System.out.println("s executed");
    	    }

    	});

    }
   
 
    private void printDebugData(JTable table) {
        int numRows = table.getRowCount();
        int numCols = table.getColumnCount();
        javax.swing.table.TableModel model = table.getModel();
 
        System.out.println("Value of data: ");
        for (int i=0; i < numRows; i++) {
            System.out.print("    row " + i + ":");
            for (int j=0; j < numCols; j++) {
                System.out.print("  " + model.getValueAt(i, j));
            }
            System.out.println();
        }
        System.out.println("--------------------------");
    }
 
    /**
     * Create the GUI and show it.  For thread safety,
     * this method should be invoked from the
     * event-dispatching thread.
     */
    private static void createAndShowGUI() {
        //Create and set up the window.
        JFrame frame = new JFrame("SimpleTableDemo");
        frame.setSize(550, 270);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
 
        //Create and set up the content pane.
        GUI newContentPane = new GUI();
        newContentPane.setOpaque(true); //content panes must be opaque
        frame.setContentPane(newContentPane);
 
        //Display the window.
        frame.pack();
        frame.setVisible(true);
    }
 
    public static void main(String[] args) {
        //Schedule a job for the event-dispatching thread:
        //creating and showing this application's GUI.
        javax.swing.SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                createAndShowGUI();
            }
        });
    }
}
